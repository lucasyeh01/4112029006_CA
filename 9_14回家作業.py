# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/150A-v3HBEU0tqzdfDvnJ64t2rVor8bYm
"""

# 定義頁表，其中鍵是頁號，值是框架號
page_table = {0: 5, 1: 9, 2: 14}
 # 定義頁大小（例如：4096字節）
page_size = 4096
 # 定義邏輯地址（例如：7000）
logical_address = 7000
 # 調用函數進行地址轉換
memory_addressing(page_table, page_size, logical_address)
def memory_addressing(page_table, page_size,
logical_address):
 # 計算頁號和偏移量
  page_number, offset = divmod(logical_address, page_size)

 # 查找頁表來獲得相應的框架號
  if page_number in page_table:
    frame_number = page_table[page_number]
 # 計算物理地址
    physical_address = frame_number * page_size + offset
    print(f"The physical address is {physical_address}")
  else:
    print("Invalid page number, address translation failed.")

page_table = {0: 5, 1: 9, 2: 14}

page_size = 4096

logical_address=float(input(f"請輸入地址:"))
memory_addressing(page_table, page_size, logical_address)

def memory_addressing(page_table, page_size, logical_address):

  page_number, offset = divmod (logical_address, page_size)


  if page_number in page_table:
    frame_number = page_table[page_number]

    physical_address = frame_number * page_size + offset
    print(f"The physical address is {physical_address}")
  elif page_number >= 2:
    print("退出")
  else:
    print("Invalid page number, address translation failed.")



